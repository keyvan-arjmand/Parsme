@using Application.Common.Utilities
@using Domain.Entity.Product
@using Domain.Enums
@using Microsoft.AspNetCore.Mvc.TagHelpers
@{
    Layout = "_LayoutAdmin";
    List<Brand> brands = ViewBag.Brands;
    List<Product> products = ViewBag.Products;
    List<SubCategory> subCategories = ViewBag.SubCats;
    List<Color> colors = ViewBag.Colors;
    List<Guarantee> Guarantees = ViewBag.Guarantee;
}

@section link
{
    <style>
    .select2-container--default .select2-selection--multiple .select2-selection__choice {
        background-color: #007bff !important;
        color: #fff;
    }

    .select2-selection--multiple {
        min-width: 300px;
    }

    .ck-content {
        min-height: 200px;
        height: fit-content;
    }
    .image-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }
    .image-container img {
        max-width: 150px;
        height: auto;
    }
    .is-invalid {
        border: 2px solid red;
    }
    .text-overflow-cat-card{
        text-overflow: ellipsis;
        width: auto;
        overflow: hidden;
        text-wrap: normal;
        height: 60px;
        direction: rtl;
    }
    .select2-container--default .select2-selection--single{
        height: 40px;
    }
    </style>
}

<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">مدیریت محصولات</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-left">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "Admin")">خانه</a>
                    </li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<section class="content">
<div class="container-fluid">
<div class="row">

<!-- Profile Image -->

<!-- /.col -->
<div class="col-md-12">
<div class="card">
<div class="card-header p-2">
    <ul class="nav nav-pills">
        <li class="nav-item">
            <a class="nav-link active show" href="#activity" data-toggle="tab">محصولات</a>
        </li>
        <li class="nav-item">
            <a class="nav-link " href="#SubCategory" data-toggle="tab">اضافه کردن کالا</a>
        </li>
    </ul>
</div><!-- /.card-header -->
<div class="tab-content">
<div class="tab-pane active show" id="activity">
    <div class="w-100 d-flex justify-content-between gap-3">
        <div class="card card-primary card-outline w-100 p-3 m-2">
            <div class="card-body box-profile">
                <p class="text-muted text-center">خلاصه وضعیت</p>
                <div class="d-flex justify-content-between gap-4 w-100">
                    <div class="w-50">
                        <ul class="list-group list-group-unbordered mb-3">
                            <li class="list-group-item">
                                <b>تعداد محصول</b> <a class="float-left"> @products.Count</a>
                            </li>
                            <li class="list-group-item">
                                <b>موجودی</b> <a class="float-left"> @products.Count(x => x.ProductColors.Select(x => x.Inventory).Count() > 0)</a>
                            </li>
                            <li class="list-group-item">
                                <b>محصول جدید</b> <a class="float-left"> @products.Count(x => x.InsertDate <= DateTime.Now.AddDays(-15))</a>
                            </li>

                        </ul>
                    </div>
                    <div class="w-50">
                        <ul class="list-group list-group-unbordered mb-3">
                            <li class="list-group-item">
                                <b> محصولات ویژه</b> <a class="float-left"> @products.Count(x => x.IsOffer)</a>
                            </li>
                            <li class="list-group-item">
                                <b>محصولات لحظه ای</b> <a class="float-left"> @products.Count(x => x.MomentaryOffer)</a>
                            </li>
                            <li class="list-group-item">
                                <b>اتمام موجودی</b> <a class="float-left"> @products.Count(x => x.ProductColors.Select(x => x.Inventory).Count() < 1)</a>
                            </li>

                        </ul>
                    </div>
                </div>

            </div>
            <!-- /.card-body -->
        </div>

    </div>
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">محصولات</h3>

                <div class="card-tools">

                    <form asp-action="ProductManage" asp-controller="Admin" method="post">
                        <div class="input-group input-group-sm" style="width: 150px;">
                            <input type="text" name="search" class="form-control float-right" placeholder="جستجو">
                            <div class="input-group-append">
                                <button type="submit" class="btn btn-default">
                                    <i class="fa fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <!-- /.card-header -->
            <div class="card-body table-responsive p-0">
                <table class="table table-hover">
                    <tr>
                        <th>Id</th>
                        <th>نام</th>
                        <th>عکس</th>
                        <th>تاریخ</th>
                        <th>برند</th>
                        <th>زیردسته</th>
                        <th>تعداد رنگ</th>
                        <th>وضعیت</th>
                        <th class="text-center" style="width: 10%">#</th>
                    </tr>
                    @{
                        if (products.Count < 1)
                        {
                            <div>
                                محصولی ثبت نشده
                            </div>
                        }
                        else
                        {
                            foreach (var i in products)
                            {
                                <tr>
                                    <td>@i.Id</td>
                                    <td style="overflow: hidden">@i.PersianTitle</td>
                                    <td>
                                        <img src="/Images/ProductImage/@i.ImageUri" width="60"/>
                                    </td>
                                    <td>@i.InsertDate.ToPersianTime()</td>
                                    <td>@i.Brand.Title</td>
                                    <td>@i.SubCategory.Name</td>
                                    <td>@i.ProductColors.Count()</td>

                                    @if (@i.ProductStatus == ProductStatus.Available)
                                    {
                                        <td>
                                            <span class="badge badge-success">@i.ProductStatus.ToDisplay()</span>
                                        </td>
                                    }
                                    else
                                    {
                                        <td>
                                            <span class="badge badge-danger">@i.ProductStatus.ToDisplay()</span>
                                        </td>
                                    }
                                    <td class="text-center">
                                        <a class="badge bg-warning text-muted " href="@Url.Action("EditProduct", "Admin", new { @i.Id })">ویرایش</a>
                                        
                                    </td>
                                </tr>
                            }
                        }
                    }

                </table>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>

</div>
<div class="tab-pane p-5" id="SubCategory">
<div class="card card-info card-outline mt-4">
    <div class="card-header">
        <h3 class="card-title">
            <small class="h4">مشخصات کلی</small>
        </h3>
        <!-- tools box -->
        <div class="card-tools">
            <button type="button" class="btn btn-tool btn-sm"
                    data-widget="collapse"
                    data-toggle="tooltip"
                    title="Collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-tool btn-sm"
                    data-widget="remove"
                    data-toggle="tooltip"
                    title="Remove">
                <i class="fa fa-times"></i>
            </button>
        </div>
        <!-- /. tools -->
    </div>
    <!-- /.card-header -->
    <div class="card-body" style="background-color:	rgb(220,220,220,0.4)">
        <div class="d-flex justify-content-between flex-nowrap gap-3 align-items-center ">
            <div class="form-group w-50 p-3">
                <label>عنوان</label>
                <input id="Title" type="text" class="form-control" required="required">
            </div>
            <div class="form-group w-50 p-3">
                <label>عنوان فارسی</label>
                <input id="PersianTitle" type="text" class="form-control" required="required">
            </div>
        </div>
        <div class="d-flex justify-content-between flex-nowrap gap-3 align-items-center">
            <div class="form-group w-50 p-3">
                <label>معرفی</label>
                <textarea id="Detail" class="form-control" required="required"></textarea>
            </div>
            <div class="form-group w-50 p-3">
                <label>توضیحات Meta</label>
                <input id="MetaDesc" type="text" class="form-control">
            </div>
        </div>
        <div class="d-flex justify-content-between flex-nowrap gap-3 align-items-center">
            <div class="form-group w-50 p-3">
                <label>تگ ها</label>
                <input id="MetaKeyword" type="text" class="form-control" required="required">
            </div>
            <div class="form-group w-50 p-3">
                <label>هـدایا</label>
                <input id="ProductGift" type="text" class="form-control" required="required">
            </div>
        </div>
        <div class="d-flex justify-content-between flex-nowrap gap-3 align-items-center">
            <div class="form-group w-50 p-3">
                <label>نقاط قوت</label>
                <textarea id="Strengths" class="form-control" required="required"></textarea>
            </div>
            <div class="form-group w-50 p-3">
                <label>نقاط ضعف</label>
                <textarea id="WeakPoints" class="form-control" required="required"></textarea>
            </div>
        </div>

        <div class="d-flex justify-content-between flex-nowrap gap-3 align-items-center">
            <div class="form-group w-50 p-3 d-flex flex-column">
                <label for="exampleInputPassword1">دسته بندی</label>
                <select id="SubCatSelect" class="form-control select2" aria-label="Default select example" required="required">
                    @{
                        <option value="0">انتخاب</option>
                        foreach (var i in subCategories)
                        {
                            <option value="@i.Id">@i.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="form-group w-50 p-3  d-flex flex-column">
                <label for="exampleInputPassword1">برند</label>
                <select id="BrandId" class="form-control " aria-label="Default select example" required="required">
                </select>
            </div>
        </div>

        <div>
            <label id="labelDetail" style="display: none">ویژگی های محصول</label>

            <div id="DetailProduct"
                 class="form-group w-100 p-3 d-flex justify-content-start align-content-center  flex-wrap" style="gap: 30px">

            </div>
        </div>
    </div>
</div>

<div class="card card-info card-outline mt-4">
    <div class="card-header">
        <h3 class="card-title">
            <small class="h4">قیمت و موجودی</small>
        </h3>
        <!-- tools box -->
        <div class="card-tools">
            <button type="button" class="btn btn-tool btn-sm"
                    data-widget="collapse"
                    data-toggle="tooltip"
                    title="Collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-tool btn-sm"
                    data-widget="remove"
                    data-toggle="tooltip"
                    title="Remove">
                <i class="fa fa-times"></i>
            </button>
        </div>
        <!-- /. tools -->
    </div>
    <!-- /.card-header -->
    <div class="card-body" style="background-color:	rgb(220,220,220,0.4)">
        <div class="d-flex justify-content-between flex-nowrap gap-3 align-items-center">
            <div class="form-group w-50 p-3  d-flex flex-column">
                <label for="exampleInputPassword1">وضعیت کالا</label>
                <select id="ProductStatus" class="form-control select2" aria-label="Default select example" required="required">
                    <option selected value="0">موجود</option>
                    <option value="1">غیر موجود</option>
                    <option value="2">به زودی</option>
                    <option value="3">از رده خارج</option>
                </select>
            </div>
            <div class="form-group w-50 p-3" id="">
                <label>مبلغ تخفیف</label>
                <input id="DiscountAmount" type="text" class="form-control">
            </div>

        </div>

        <div>
            <div class="d-flex justify-content-start gap-5">
                <div class="d-flex flex-column align-items-start p-3 m-3">
                    <label>پیشنهاد لحظه ای</label>
                    <input type="checkbox" class="form-check-input" id="MomentaryOffer" required="required"/>
                </div>
                <div class="d-flex flex-column align-items-start p-3 m-3">
                    <label>پیشنهاد ویژه</label>
                    <input type="checkbox" class="form-check-input" id="Offer" required="required"/>
                </div>
                <div class="d-flex flex-column align-items-start p-3 m-3">
                    <label>نمایش در کالای پیشنهادی</label>
                    <input type="checkbox" class="form-check-input" id="ShowIndex" required="required"/>
                </div>
            </div>

            <div style="display: none !important" id="OfferForm">
                <div class="d-flex justify-content-center p-3" style="gap: 20px">
                    <div class="form-group w-50  d-flex flex-column">
                        <label for="exampleInputPassword1">رنگ مورد نظر</label>
                        <select id="OfferColor" class="form-control " aria-label="Default select example" required="required">

                        </select>
                    </div>
                    <div class="d-flex flex-column w-25">
                        <label>مبلغ</label>
                        <input id="OfferAmount" type="text" class="form-control">
                    </div>
                    <div class="form-group align-items-center w-50">
                        <label>از تاریخ</label>
                        <div class="input-group date" style="border-radius: 7px" data-provide="datepicker">
                            <input id="datePicker" type="text" class="form-control">
                            <div class="input-group-addon">
                                <span class="glyphicon glyphicon-th"></span>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between w-75" style="gap: 10px">
                        <div class="d-flex flex-column">
                            <label for="days">روز</label>
                            <input type="number" id="days" name="days" min="0" max="30" value="0" class="form-control"><br><br>
                        </div>
                        <div class="d-flex flex-column">
                            <label for="hours">ساعت</label>
                            <input type="number" id="hours" name="hours" min="0" max="24" value="0" class="form-control"><br><br>
                        </div>
                        <div class="d-flex flex-column">
                            <label for="minutes">دقیقه</label>
                            <input type="number" id="minutes" name="minutes" min="0" max="60" value="0" class="form-control"><br><br>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="d-flex flex-column  p-3">
            <label>رنگ محصول</label>
            <div class="form-group w-100 p-3">
                <select id="Colors" class="form-control select2 w-100" multiple="multiple"
                        style="width: fit-content;min-width: 200px;text-align: right" required="required">
                    @{
                        foreach (var i in colors)
                        {
                            <option value="@i.Id,@i.Title">@i.Title</option>
                        }
                    }
                </select>
            </div>
            <div>
                <label id="labelColor" style="display: none">قیمت بر اساس رنگ</label>
                <div id="colorProduct"
                     class="form-group w-100 p-3 d-flex flex-column justify-content-between align-content-center gap-4 flex-wrap">

                </div>
            </div>

        </div>

    </div>
</div>
<div class="card card-info card-outline mt-4">
    <div class="card-header">
        <h3 class="card-title">
            <small class="h4">گالری عکس</small>
        </h3>
        <!-- tools box -->
        <div class="card-tools">
            <button type="button" class="btn btn-tool btn-sm"
                    data-widget="collapse"
                    data-toggle="tooltip"
                    title="Collapse">
                <i class="fa fa-minus"></i>
            </button>
            <button type="button" class="btn btn-tool btn-sm"
                    data-widget="remove"
                    data-toggle="tooltip"
                    title="Remove">
                <i class="fa fa-times"></i>
            </button>
        </div>
        <!-- /. tools -->
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <div class="d-flex justify-content-between">
            <div class="form-group w-50 p-3">
                <label for="exampleInputFile">تصویر کالا</label>
                <div class="input-group">
                    <div class="custom-file">
                        <input type="file" class="custom-file-input" id="ImageUri">
                        <input type="text" id="Image64" hidden="hidden">
                        <label class="custom-file-label" for="exampleInputFile">انتخاب فایل</label>
                    </div>
                </div>
            </div>
            <div class="input-group w-50  p-1" style="justify-content: center;">
                <img id="ProdImage" src="" style="object-fit: cover;text-align: center" class="imageThreeP" width="130"/>
            </div>
        </div>

        <div class="p-2 mt-3" style="background-color:	rgb(220,220,220,0.4);border-radius: 10px">
            <div class="p-3 m-2">
                <div class="form-group w-100 p-3">
                    <input type="file" id="imageInput" accept="image/*" multiple>
                    <br><br>
                    <div id="imageContainer" class="image-container"></div>
                </div>
            </div>

        </div>


    </div>
</div>

<div>
    <div class="card card-info card-outline mt-4">
        <div class="card-header">
            <h3 class="card-title">
                <small class="h5"> معرفی محصول</small>
            </h3>
            <!-- tools box -->
            <div class="card-tools">
                <button type="button" class="btn btn-tool btn-sm"
                        data-widget="collapse"
                        data-toggle="tooltip"
                        title="Collapse">
                    <i class="fa fa-minus"></i>
                </button>
                <button type="button" class="btn btn-tool btn-sm"
                        data-widget="remove"
                        data-toggle="tooltip"
                        title="Remove">
                    <i class="fa fa-times"></i>
                </button>
            </div>
            <!-- /. tools -->
        </div>
        <!-- /.card-header -->
        <div class="card-body">
            <div class="mb-3">
                <textarea id="editor1" name="editor1" style="width: 100%"></textarea>
            </div>
        </div>
    </div>

</div>
<div class="d-flex justify-content-center flex-nowrap gap-3 align-items-center mt-3">
    <div class="form-input w-50">
        <button type="button" onclick="insertProduct()" class="btn btn-primary w-100">
            ثبت
        </button>
    </div>
    <div class="form-group w-25">
        <div class="form-check">
            <input type="checkbox" id="IsActive" class="form-check-input"/>
            <label class="form-check-label">وضعیت فعال</label>
        </div>
    </div>
</div>

</div>
</div>
</div><!-- /.card-body -->
</div>
</div>
</div>
</section>

@section script{

    <script>
        document.getElementById('ImageUri').addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    const base64String = e.target.result.split(',')[1]; // Extract the base64 part
                    $("#Image64").val(base64String);
                };
                reader.readAsDataURL(file);
            }
        });
        var data =  [];
        document.getElementById('imageInput').addEventListener('change', function(event) {
            const files = event.target.files;
            const imageContainer = document.getElementById('imageContainer');
            imageContainer.innerHTML = ''; // Clear previous images
            for (let i = 0; i < files.length; i++) {
                const file = files[i];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        // Display the image
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        imageContainer.appendChild(img);

                        // Convert image to base64
                        const base64 = e.target.result.split(',')[1]; // Strip off data:image/jpeg;base64, part
                        const fileName = file.name;

                        // Append base64 data to the list

                        data.push(`${base64}`)
                    }
                    reader.readAsDataURL(file);
                }
            }
        });
    function insertProduct() {
        const requiredFields = document.querySelectorAll('input[required], textarea[required], select[required]');
        let allFilled = true;

        requiredFields.forEach(field => {
            if (!field.value) {
                allFilled = false;
                field.classList.add('is-invalid'); // Add a class to highlight the empty field
            } else {
                field.classList.remove('is-invalid');
            }
        });
        if (!allFilled) {
            alert('پر کردن تمامی فیلد های محصول اجباری میباشد');
        }else{
            const inputContainer = document.getElementById('colorProduct');
            const formData = Array.from(inputContainer.children).map(div => {
                const colorId = div.querySelector(`input[name^="ColorId"]`).value;
                const colorPrice = div.querySelector(`input[name^="colorPrice"]`).value;
                const colorInv = div.querySelector(`input[name^="colorInv"]`).value;
                const gu = div.querySelector(`select[name^="Gu"]`).value;

                return {
                    ColorId: colorId,
                    ColorPrice: colorPrice,
                    ColorInv: colorInv,
                    Gu: gu
                };
            });
            const detailGroups = document.querySelectorAll('.form-group.detail-form');
            const detailsArray = [];
            detailGroups.forEach(formGroup => {
                const detailIdValue = formGroup.querySelector('input[name="DetailId"]').value;
                let inputElement = formGroup.querySelector('input[name="DetailVal"]');
                let selectElement = formGroup.querySelector('select[name="DetailVal"]');
                let detailNameValue;

                if (inputElement) {
                    if (inputElement.type === 'checkbox' || inputElement.type === 'radio') {
                        detailNameValue = inputElement.checked;
                    } else {
                        detailNameValue = inputElement.value;
                    }
                } else if (selectElement) {
                    detailNameValue = selectElement.value;
                } else {
                    // Handle the case where the input element is not found
                    console.error('Input element not found');
                }

                detailsArray.push({
                    DetailId: detailIdValue,
                    DetailName: detailNameValue
                });
            });
            var datePicker = $("#datePicker").val();
      
                 console.log(datePicker)
            var request ={
                Title:$("#Title").val(),
                PersianTitle:$("#PersianTitle").val(),
                ProductColors: formData,
                ProductDetails: detailsArray,
                Detail:$("#Detail").val(),
                MetaDesc:$("#MetaDesc").val(),
                MetaKeyword:$("#MetaKeyword").val(),
                FullDesc:document.querySelector('.ck-content.ck-editor__editable.ck-rounded-corners.ck-blurred.ck-editor__editable_inline').innerHTML,
                ImageUri: $("#Image64").val(),
                ProductGift:$("#ProductGift").val(),
                DiscountAmount:$("#DiscountAmount").val(),
                BrandId:$("#BrandId").val(),
                SubCategoryId:$("#SubCatSelect").val(),
                ProductStatus:$("#ProductStatus").val(),
                Strengths:$("#Strengths").val(),
                WeakPoints:$("#WeakPoints").val(),
                IsActive:document.getElementById('IsActive').checked,
                IsShowIndex:document.getElementById('ShowIndex').checked,
                Images:data,
                IsOffer: document.getElementById('Offer').checked,
                MomentaryOffer: document.getElementById('MomentaryOffer').checked,
                Offer:{
                    ColorId:$("#OfferColor").val(),
                    OfferAmount:$("#OfferAmount").val(),
                    Hours:$("#hours").val(),
                    Minutes:$("#minutes").val(),
                    Days:$("#days").val(),
                    Time:datePicker
                }
            };
            console.dir(request)
            $.ajax({
                type: "Post",
                data:{request} ,
                url: "/Admin/InsertProduct",
                success: function (data) {
                    alert("عملیات موفقیت آمیز");
                    var currentUrl = window.location.origin;
                    window.open(currentUrl+"Admin/ProductManage/");
                },
                error: function (xhr) {
                    alert("خطای داخلی در سرور");
                }
            });
        }
      
    }

    $(function () {
  
        $('#Colors').change(function (e) {
            let json12 =@Json.Serialize(Guarantees);
            const optionsHTML = json12.map(option => `<option value="${option.id}">${option.title}</option>`).join('') ;
            var selected = $(e.target).val();
            var html = '';
            const offerColorHTML = selected.map(option => `<option value="${option.split(",")[0]}">${option.split(",")[1]}</option>`).join('') ;
            const inputContainer = document.getElementById('colorProduct');
            const existingInputs = {};
            inputContainer.querySelectorAll('input, select').forEach(input => {
                existingInputs[input.name] = input.value;
            });

            inputContainer.innerHTML = '';

            selected.forEach(value => {
                const [id, colorName] = value.split(',');

                const div = document.createElement('div');
                div.className = 'd-flex justify-content-between color-opt';
                div.style.gap = '25px';
                div.id = id;

                div.innerHTML = `
                        <div class="form-group d-flex w-100 colors-form" style="max-width: 250px;max-height: 50px">
                            <div class="input-group-prepend">
                                <span style="border-radius: 0 5px 5px 0;" class="input-group-text">${colorName}</span>
                            </div>
                            <input name="colorPrice${id}" style="border-radius: 5px 0 0 5px;" type="text" class="form-control">
                            <input name="ColorId${id}" value="${id}" hidden="hidden">
                        </div>
                        <div class="form-group d-flex w-100 colors-form" style="max-width: 250px;max-height: 50px">
                            <div class="input-group-prepend">
                                <span style="border-radius: 0 5px 5px 0;" class="input-group-text">موجودی</span>
                            </div>
                            <input name="colorInv${id}" style="border-radius: 5px 0 0 5px;" type="text" class="form-control">
                        </div>
                        <div class="form-group w-100 d-flex flex-column">
                            <select name="Gu${id}" class="form-control select2 Guarantees"></select>
                        </div>
                    `;

                inputContainer.appendChild(div);

                // Restore existing values if any
                if (existingInputs[`colorPrice${id}`]) {
                    div.querySelector(`input[name="colorPrice${id}"]`).value = existingInputs[`colorPrice${id}`];
                }
                if (existingInputs[`colorInv${id}`]) {
                    div.querySelector(`input[name="colorInv${id}"]`).value = existingInputs[`colorInv${id}`];
                }
                if (existingInputs[`Gu${id}`]) {
                    div.querySelector(`select[name="Gu${id}"]`).value = existingInputs[`Gu${id}`];
                }

                if (selected.length < 1) {
                    $("#labelColor").css("display", "none");

                } else {
                    $("#labelColor").css("display", "block");

                }
                document.getElementById("OfferColor").innerHTML = offerColorHTML;
                const selectElements = document.getElementsByClassName('Guarantees');
                Array.from(selectElements).forEach(element => {
                    element.innerHTML = optionsHTML;
                });
            });
            
     
    });

        // Function to create and append a new option
     
        });
        // Add new options
    document.addEventListener('DOMContentLoaded', (event) => {
        const checkbox = document.getElementById('Offer');
        checkbox.addEventListener('change', () => {
            if (checkbox.checked) {
                $("#OfferForm").css("display", "block");
                $('#DiscountAmount').prop('disabled', true);
                $('#DiscountAmount').val("");
            } else {
                $("#OfferForm").css("display", "none");
                $('#DiscountAmount').prop('disabled', false);
                $('#OfferAmount').val("");
                $('#OfferTime').val("");
            }
        });
    });
    
    </script>
    <script>
 
    $('#ImageUri').on('change', function(event) {
        var input = event.target;
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function(e) {
                $('#ProdImage').attr('src', e.target.result).show();
            }
            reader.readAsDataURL(input.files[0]);
        }
    });
    $('#SubCatSelect').change(function (e) {
        var selected = $(e.target).val();
        $.ajax({
            type: "Get",
            data: {subCatId: selected},
            url: "/Admin/GetCategoryDetailBySubCatId",
            success: function (data) {
                addOption(selected)
                let html = ``;
                data.map(x => {

                    if (x.dataType==1)
                    {
                        html += `
                             <div class=" d-flex w-100 form-group detail-form" style="max-width: 250px;">
                             <div class="input-group-prepend">
                              <span style="border-radius: 0 5px 5px 0;" class="input-group-text">${x.title}</i></span>
                              </div>
                              <select name="DetailVal" style="border-radius: 5px 0 0 5px;" class="form-control select2" aria-label="Default select example" required="required">
                                  ${x.option.split(",").map(y => {
                            return `<option value="${y}">${y}</option>`;
                        }).join('')}
                               </select>
                              <input name="DetailId" value="${x.id}" hidden="hidden">
                             </div>
                             `;
                    }

                    if (x.dataType==3)
                    {
                        html += `
                             <div class=" d-flex  gap-3 w-100 form-group detail-form" style="max-width: 190px;">
                              <span class="">${x.title}</i></span>
                             <input type="checkbox"  name="DetailVal"  class="form-check-input"/>
                              <input name="DetailId" value="${x.id}" hidden="hidden">
                             </div>
                             `;
                    }
                    if (x.dataType!=1 && x.dataType !=3)
                    {
                        html += `
                             <div class=" d-flex w-100 form-group detail-form" style="max-width: 250px;">
                             <div class="input-group-prepend">
                              <span style="border-radius: 0 5px 5px 0;" class="input-group-text">${x.title}</i></span>
                              </div>
                              <input name="DetailVal" style="border-radius: 5px 0 0 5px;" type="text" class="form-control">
                              <input name="DetailId" value="${x.id}" hidden="hidden">
                             </div>
                             `;
                    }

                })
                $("#labelDetail").css("display", "block");
                document.getElementById("DetailProduct").innerHTML = html;
            },
            error: function (xhr) {
                alert("خطای داخلی در سرور");
                console.dir(xhr)
            }
        });
    });
    function addOption(catId) {

        if (catId ==0){
            var selectElement = document.getElementById("BrandId");
            var option = document.createElement("option");
            option.value ='انتخاب دسته بندی';
            option.textContent = 'انتخاب دسته بندی';
            selectElement.replaceChildren(option);
        }else{
            $.ajax({
                type: "Get",
                data: {subCatId: catId},
                url: "/Admin/GetBrandBySubCat",
                success: function (data) {
                    console.dir(data)
                    var selectElement = document.getElementById("BrandId");
                    selectElement.replaceChildren();
                    data.forEach(x => {
                        if (x.title) { // Optional: add validation to check if `title` exists
                            var option = document.createElement("option");
                            option.value = x.id;
                            option.textContent = x.title;
                            selectElement.appendChild(option);

                        }
                    });
                },
                error: function (xhr) {
                    alert("خطای داخلی در سرور");
                }
            });
        }
    }
 //   $('.normal-example').persianDatepicker();
    $('.datepicker').datepicker({
        format: 'mm/dd/yyyy',
    });
    $(function () {
        // Replace the <textarea id="editor1"> with a CKEditor
        // instance, using default configuration.
        ClassicEditor
            .create(document.querySelector('#editor1'))
            .then(function (editor) {
                // The editor instance
            })
            .catch(function (error) {
                console.error(error)
            })

        // bootstrap WYSIHTML5 - text editor

        $('.textarea').wysihtml5({
            toolbar: {fa: true}
        })
    })
</script>
}